# -*- coding: utf-8 -*-
"""Deliverable2Walmart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B5r3pduey1723go_uqcfP7nURnqr3Uxc
"""

#Importar todas as bibliotecas que podem ser usadas
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from datetime import date, datetime

# Importar os dados e Mostrar as informações gerais do arquivo
df = pd.read_csv('/content/sample_data/Walmart.csv', sep = ',')
df.info()

# Checar os dados
df.shape
df.head()

# Renomear as colunas
df.rename(columns = {
    'Store':'Loja',
    'Date':'Data',	
    'Weekly_Sales':'Vendas_na_Semana',	
    'Holiday_Flag':'Semana_com_Feriado',	
    'Temperature':'Temperatura',
    'Fuel_Price':'Preco_Combustivel',
    'Unemployment':'Desemprego'
    }, inplace = True)
df

df['Data'] = pd.to_datetime(df['Data'], format = '%d-%m-%Y')
df['Ano'] = df['Data'].dt.year
df['Mês'] = df['Data'].dt.month
df['Semana'] = df['Data'].dt.isocalendar().week
df.head()

# Relação entre vendas e períodos semanais

plt.figure(figsize=(18,6))
sns.lineplot(data=df, x='Data', y='Vendas_na_Semana')
plt.title('Vendas por semana - Média')
plt.show()

df.describe(percentiles = [0.8, 0.9, 0.95, 0.99])

df.groupby(by='Loja').mean().sort_values(by='Vendas_na_Semana', ascending = False).head()

sns.histplot(data=df[df.Loja.isin([20,4,14,13,2])], x='Vendas_na_Semana', hue='Loja', palette='Blues')

#Preço médio de venda semanal por loja

# copy df
df_group = df.copy()
    
# groupby
df_group = df.groupby(by='Loja').mean()

# sortvalues
df_group = df_group.sort_values(by = 'Vendas_na_Semana', ascending = False)

df_group

# Selecionando as 5 melhores Lojas, considerando os parâmetros selecionados até aqui
top_5 = df_group.index.to_list()[:5]
top_5

# Qual atributo tem maior correlação (positiva ou negativa) com o número de vendas?
df.corr()

sns.heatmap(df.corr(), cmap='Blues')

#Conclusão: O desemprego com correlação de -0,106. E "Loja" não é parâmetro porque é o ID, então, tudo indica que isso não interfere nas vendas.
print(df.corr()['Vendas_na_Semana'].sort_values())

# Lojas com maiores vendas e as semanas do ano que superou a média do período
df_maiores_vendas = df.copy()

df_20 = df_maiores_vendas[df_maiores_vendas.Loja == 20]

mean_20 = df_maiores_vendas[df_maiores_vendas.Loja == 20]['Vendas_na_Semana'].mean()

mean_20

# Semanas que vendeu
df_20.shape[0]

# Semanas que vendeu acima da média
df_20[df_20.Vendas_na_Semana >= mean_20].shape[0]

df_20[df_20.Vendas_na_Semana >= mean_20].shape[0]/ df_20.shape[0] * 100

plt.figure(figsize=(18,6))
sns.lineplot(data=df[df.Loja ==20], x='Data', y='Vendas_na_Semana')
sns.lineplot(data=df[df.Loja ==20], x='Data', y=df[df.Loja == 20]['Vendas_na_Semana'].mean(), c = 'Red', label = 'Média Hist. 20')
plt.title('Vendas por Semana - Média')
plt.show()

#Gráfico com as vendas máximas, as vendas mínimas e a média de todas as lojas ao longo do tempo. Destaque para os 4 feriados principais.
holiday_dict = {
  'Super Bowl' : ['12/02/10', '11/02/11', '10/02/12', '8/02/13'],
  'Labour Day' : ['10/09/10', '9/09/11', '7/09/12', '6/09/13'],
  'Thanksgiving' : ['26/11/10', '25/11/11', '23/11/12', '29/11/13'],
  'Christmas' :['31/12/10', '30/12/11', '28/12/12', '27/12/13']
}

for i in holiday_dict.keys():
  print(i)
  for j in holiday_dict[i]:
    print(j)

#Recebendo o nome do feriado
for i in holiday_dict.keys():
  for j in holiday_dict[i]:
    print(f'{i} - {j[-2:]}')

#Gráfico de análise

plt.figure(figsize = (18,6))
sns.lineplot(data=df, x = 'Data', y = 'Vendas_na_Semana')

for i in holiday_dict.keys():
  #print(i)
  for j in holiday_dict[i]:
    #print(j)

    date_target = datetime.strptime(j, '%d/%m/%y')
    
    sns.scatterplot(x=[date_target, date_target],
                    y = [0, 2.5*10**6], label = f'{i} - {j[-2:]}')
    sns.lineplot(x=[date_target, date_target],
                    y = [0, 2.5*10**6], linestyle = '--', color='black')


plt.title('Vendas por semana - Média')
plt.show()

#Escolha uma das lojas para expandir e justificar.
#Conclusão: A loja que tem mais vendas semanais acima da média é a que tem o maior faturamento histórico.
plt.figure(figsize=(18,6))
sns.lineplot(data=df, x='Data', y='Vendas_na_Semana', hue='Loja')
plt.title('Vendas por semana - Média')
plt.show()

# df copy
df_mean = df.copy()

# groupby
df_mean = df_mean.groupby('Loja', as_index = False).mean()

# seleção
df_mean = df_mean[['Loja', 'Vendas_na_Semana']]
df_mean

aux_list =  []
aux_list_got = []

for i in df_mean.Loja:
  total = df[df.Loja == i].shape[0]
  aux_list.append(total)

  got = df[(df.Loja == i) & (df.Vendas_na_Semana >= df_mean.iloc[i-1,1])].shape[0]

  aux_list_got.append(got)

df_mean['Total'] = aux_list
df_mean['Got'] = aux_list_got
df_mean['Perc %'] = df_mean['Got']/df_mean['Total'] * 100

df_mean.sort_values(by = 'Perc %', ascending = False, inplace = True)

df_mean



